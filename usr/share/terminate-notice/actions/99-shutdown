#!/usr/bin/sh
# This will look odd in the version control, but this will be set to the tag identifier
# and date it was tagged in CI/CD.
VERSION="#TAG# - #TAG_DATE#"

# Load the helper function used later on.
# shellcheck disable=SC1091
. /usr/share/terminate-notice/helpers

# This announces that the action has been triggered to syslog.
start_action "$(basename "$0")-$VERSION"

# This tries to read the config then checks to see whether the load failed
eval "$(load_config shutdown)"
if [ "$FAILED" -eq 1 ]
then
    error 2 "$(basename "$0")-$VERSION" Failed to load config
fi

# Check all your required variables have been defined
debug "$(basename "$0")-$VERSION" Checking shutdown_delay is set
# shellcheck disable=SC2154
_shutdown_delay="$(first_of "$SHUTDOWN_DELAY" "$shutdown_delay" "now")"
if [ -z "$_shutdown_delay" ]
then
    error 2 "$(basename "$0")-$VERSION" No shutdown_delay defined
fi

debug "$(basename "$0")-$VERSION" Checking noshut is set
# shellcheck disable=SC2154
_noshut="$(first_of "$NOSHUT" "$no_shut" "0")"
if [ -z "$_noshut" ]
then
    error 2 "$(basename "$0")-$VERSION" No noshut value defined
fi

# If VERIFY=1 then this will announce that the variables were loaded OK on first run, and then exit.
verified "$(basename "$0")-$VERSION"

# Now you can actually run the action, because all the variables have been defined and tested.
# shellcheck disable=SC2154
if [ "$_noshut" = "1" ]
then
    /usr/sbin/shutdown -h "$_shutdown_delay"
else
    info "$(basename "$0")-$VERSION" "Would shut down (halted by setting)"
fi